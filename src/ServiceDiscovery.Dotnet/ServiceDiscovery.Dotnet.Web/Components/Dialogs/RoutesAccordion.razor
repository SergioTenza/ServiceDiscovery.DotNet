@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<GatewayState> GatewayState

<FluentHeader>Accordion</FluentHeader>
<FluentAccordion ActiveId="@activeId" OnAccordionItemChange="HandleOnAccordionItemChange">
    @if(GatewayState.Value.Routes is null)
    {
        <FluentAccordionItem Heading="No Routes">
            <FluentIcon Value="@(new Icons.Regular.Size20.Globe())" Color="@Color.Neutral" Slot="start" Expanded="true"/>       
            <FluentHeader>There are no routes registered actually!</FluentHeader>             
            <FluentTooltip Anchor="delay3" Position=TooltipPosition.End Delay=600>
                <p>You should consider making one default route.</p> 
            </FluentTooltip>
        </FluentAccordionItem>    
    }
    else
    {
        foreach(RouteDto route in GatewayState.Value.Routes)
        {
            <FluentAccordionItem Heading="@route.RouteId">
                <FluentIcon Value="@(new Icons.Regular.Size20.Globe())" Color="@Color.Neutral" Slot="start" Expanded="true"/>       
                <FluentHeader>@route.RouteId</FluentHeader>             
                <FluentTooltip Anchor="delay3" Position=TooltipPosition.End Delay=600>
                    <p>Options List</p> 
                </FluentTooltip>
            </FluentAccordionItem>
        }
        
    }

    
</FluentAccordion>

@code {    
    string activeId = "accordion-1";
    FluentAccordionItem? changed;
    private void HandleOnAccordionItemChange(FluentAccordionItem item)
    {
        changed = item;
    }
}
