@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<GatewayState> GatewayState


<FluentAccordion ExpandMode="AccordionExpandMode.Single">
    @if(GatewayState.Value.Routes is null || !GatewayState.Value.Routes.Any())
    {
        <FluentAccordionItem Heading="No Routes">
            <FluentIcon Value="@(new Icons.Regular.Size20.Globe())" Color="@Color.Neutral" Slot="start" Expanded="false"/>       
        </FluentAccordionItem>    
        <FluentAccordionItem Heading="No Routes">
            <FluentIcon Value="@(new Icons.Regular.Size20.Globe())" Color="@Color.Neutral" Slot="start" Expanded="false"/>       
        </FluentAccordionItem>    
        <FluentAccordionItem Heading="No Routes">
            <FluentIcon Value="@(new Icons.Regular.Size20.Globe())" Color="@Color.Neutral" Slot="start" Expanded="false"/>       
        </FluentAccordionItem>    
    }
    else
    {
        foreach(RouteDto route in GatewayState.Value.Routes)
        {
            <FluentAccordionItem Heading="@route.RouteId">
                <FluentIcon Value="@(new Icons.Regular.Size20.Globe())" Color="@Color.Neutral" Slot="start" Expanded="true"/>       
                <FluentHeader>@route.RouteId</FluentHeader>             
                <FluentTooltip Anchor="delay3" Position=TooltipPosition.End Delay=600>
                    <p>Options List</p> 
                </FluentTooltip>
            </FluentAccordionItem>
        }
        
    }

    
</FluentAccordion>

@code {    
   
}
